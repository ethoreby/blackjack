// Generated by CoffeeScript 1.7.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.App = (function(_super) {
    __extends(App, _super);

    function App() {
      return App.__super__.constructor.apply(this, arguments);
    }

    App.prototype.initialize = function() {
      var deck;
      this.set('deck', deck = new Deck());
      this.set('playerHand', deck.dealPlayer());
      this.set('dealerHand', deck.dealDealer());
      this.get('playerHand').on('stand', (function(_this) {
        return function() {
          var dealer, playerHand;
          console.log("stand");
          playerHand = _this.get('playerHand');
          dealer = _this.get('dealerHand');
          return dealer.play(playerHand.scores()[0]);
        };
      })(this));
      this.get('playerHand').on('bust', function() {
        return console.log('bust');
      });
      this.get('dealerHand').on('bust', function() {
        return console.log('dealer busts');
      });
      this.get('dealerHand').on('win', (function(_this) {
        return function() {
          return console.log('win');
        };
      })(this));
      this.get('dealerHand').on('loss', (function(_this) {
        return function() {
          return console.log('loss');
        };
      })(this));
      return this.get('dealerHand').on('tie', (function(_this) {
        return function() {
          return console.log('tie');
        };
      })(this));
    };

    return App;

  })(Backbone.Model);

}).call(this);

//# sourceMappingURL=App.map
